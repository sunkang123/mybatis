<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    <!--记载配置文件-->

    <context:property-placeholder  location="classpath:db.properties"/>
    <!--数据源，使用dbcp-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
    </bean>


    <!--sqlSessionFactory   -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--记载mybaits的配置文件-->
        <property name="configLocation" value="mybatis/SqlMapConfig.xml"/>
        <!--数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--原始dao接口配置  与spring 进行整合-->
    <bean id="userDao" class="com.mybatis.project.dao.UserDaoimpl2">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>


    <!--mapper的配置
    MapperFactoryBean    根据mapper接口生成代理对象就，本质上是一个factorybean-->
 <!--   <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.mybatis.project.mapper.UserMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->

    <!--mapper批量扫描 ，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring中容器注册
       自动扫描出的mapper的bean的　id为mapper类名，首字母小写
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描多个包，需要用半角逗号分隔-->
            <property name="basePackage" value="com.mybatis.project.mapper"/>
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


</beans>