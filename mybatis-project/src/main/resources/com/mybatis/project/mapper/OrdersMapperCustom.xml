<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离
注意： 使用mapper代理方法开发，namespace有着特殊的作用，namespace等于mapper接口的地址
-->
<mapper namespace="com.mybatis.project.mapper.OrdersMapperCustom">

    <!--查询订单关联的用户信息 定义一个resultMap -->
    <resultMap id="ordersUserResultMap" type="com.mybatis.project.po.Orders">
        <!--配置映射的订单信息  id 表示唯一标识，result表示普通的映射-->
        <id column="id" property="id"></id>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createTime" property="createTime"/>
        <result column="note" property="note"/>
        <!--配置映射的关联的用户信息 -->
        <!--association :用于映射关联查询单个对象的信息
            property :要将关联查询的用户属性映射到orders的哪个属性
        -->
        <association property="user" javaType="com.mybatis.project.po.User">
            <!--id ：关联查询的用户id
                column : 指定唯一标识用户信息的列
                property : 映射到user的哪个属性
            -->
            <id column="user_id" property="id"></id>
            <result column="username" property="username"/>
            <result column="sex" property="sex"/>
            <result column="address" property="address"/>
        </association>
    </resultMap>


    <!--查询订单关联的用户信息以及订单明细 定义一个resultMap -->
    <resultMap id="ordersAndOrderDetailResultMap" type="com.mybatis.project.po.Orders" extends="ordersUserResultMap">
        <!--配置映射的订单信息  id 表示唯一标识，result表示普通的映射-->
        <!--配置映射的关联的用户信息 -->
        <!--使用继承extends ,不用配置订单信息和用户信息的映射-->
        <!--订单明细信息
          一个订单关联查询出多条明细，要使用collection 进行映射
          collection :对关联查询到多条记录映射到集合对象中
           property: 将关联到多条记录映射到Order的哪个属性中
           ofType :指定映射到的list集合属性的pojo的类型
          -->
        <collection property="orderDetails" ofType="com.mybatis.project.po.OrderDetail">
            <id column="orderdetail_id" property="id"></id>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
            <result column="orders_id" property="ordersId"/>
        </collection>
    </resultMap>



    <!--查询用户及购买的商品-->
    <resultMap id="UserAndItemsResultMap" type="com.mybatis.project.po.User">
        <!--用户信息-->
        <id  column="user_id" property="id"></id>
        <result column="username" property="username"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>

        <!--订单信息
            一个用户对应多个订单，使用collection映射
        -->
        <collection property="orderList" ofType="com.mybatis.project.po.Orders">
            <id column="id" property="id"></id>
            <result column="user_id" property="userId"/>
            <result column="number" property="number"/>
            <result column="createTime" property="createTime"/>
            <result column="note" property="note"/>
            <!--订单明细  一个订单包含多个明细-->
            <collection property="orderDetails" ofType="com.mybatis.project.po.OrderDetail">
                <id column="orderdetail_id" property="id"></id>
                <result column="items_id" property="itemsId"/>
                <result column="items_num" property="itemsNum"/>
                <result column="orders_id" property="ordersId"/>
                <!--商品信息 一个订单明细对应一个商品-->

                <association property="items" javaType="com.mybatis.project.po.Items">
                    <id column="items_id" property="id"/>
                    <result column="items_name" property="name"/>
                    <result column="items_detail" property="detail"/>
                    <result column="items_price" property="price"/>
                </association>
            </collection>
        </collection>



    </resultMap>


    <!-- 查询订单关联查询用户  -对-查询-->

    <select id="findOrdersUser"  resultType="com.mybatis.project.po.OrdersCustom">
            select
            orders.*,
            `user`.username,
            `user`.sex,
            `user`.address
            from orders ,user
            where orders.user_id=`user`.id
    </select>

    <!--查询订单关联的用户信息，使用resultMap-->
    <select id="findOrdersUserResultMap"  resultMap="ordersUserResultMap">
            select
            orders.*,
            `user`.username,
            `user`.sex,
            `user`.address
            from orders ,user
            where orders.user_id=`user`.id
    </select>

    <!--查询订单关联用户以及订单明细，使用resultMap-->
    <select id="findOrdersAndOrderDetailResultMap"  resultMap="ordersAndOrderDetailResultMap">
             select
            orders.*,
            `user`.username,
            `user`.sex,
            `user`.address,
            			orderdetail.id  orderdetail_id,
						orderdetail.items_id,
						orderdetail.items_num,
						orderdetail.orders_id
            from orders ,user,orderdetail
            where orders.user_id=`user`.id and orders.id = orderdetail.orders_id
    </select>


    <!--查询用户及购买的商品信息，使用resultMap-->
    <select id="findUserAndItemsResultMap"  resultMap="UserAndItemsResultMap">
            select
            orders.*,
            `user`.username,
            `user`.sex,
            `user`.address,
            orderdetail.id  orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num,
            orderdetail.orders_id,
            items.`name` items_name,
            items.detail items_detail,
            items.price  items_price
            from orders ,user,orderdetail,items
            where orders.user_id=`user`.id
					and orders.id = orderdetail.orders_id
					and orderdetail.items_id  = items.id
    </select>

    <!--查询订单关联查询用户，用户信息需要延迟加载-->
    <select  id="findOrderUserLazyLoading" resultMap="OrderUserLazyLoadingResultMap">
        select * from orders
    </select>

    <resultMap id="OrderUserLazyLoadingResultMap" type="com.mybatis.project.po.Orders">
        <id column="id" property="id"></id>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="createTime" property="createTime"/>
        <result column="note" property="note"/>
        <!--实现对用户信息进行延迟加载
            select : 指定延迟加载需要执行的statement的id（是根据user_id 查询用户信息的statement ）
            如果不在同一mapper文件中对象中，需要指定mapper的命令空间
            column : 订单信息中关联用户信息查询列，是user_id

            关联查询的sql理解为：
            select orders.*,
            (select username from user where order.user_id =user.id ) username,
             (select sex from user where order.user_id =user.id ) sex,
             from order
        -->
        <association  property="user" javaType="com.mybatis.project.po.User"
                      select="com.mybatis.project.mapper.UserMapper.findUserById" column="user_id">
        </association>

    </resultMap>


    
</mapper>